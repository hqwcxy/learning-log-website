{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/docs/HTML&HTML5/",
    "result": {"data":{"markdownRemark":{"html":"<h1>HTML</h1>\n<h2>1.HTML介绍</h2>\n<h2>2.HTML结构与语法</h2>\n<h3>结构</h3>\n<pre><code class=\"language-html\">&#x3C;!DOCTYPE html>\r\n&#x3C;html>\r\n\r\n&#x3C;head>\r\n    &#x3C;meta charset=\"utf-8\">\r\n    &#x3C;title>\r\n        first page\r\n    &#x3C;/title>\r\n&#x3C;/head>\r\n&#x3C;h1>标题1&#x3C;/h1>\r\n&#x3C;h2>标题2&#x3C;/h2>\r\n&#x3C;h3>标题3&#x3C;/h3>\r\n&#x3C;p>内容&#x3C;/p>\r\n&#x3C;/html>\n</code></pre>\n<h4><!DOCTYPE>声明</h4>\n<p>​\t标示当前 HTML 文档的版本信息</p>\n<h4><code>&#x3C;html></code></h4>\n<p>此标签为 HTML 文档的根元素，只能有<strong>一个</strong>。</p>\n<h4><code>&#x3C;head></code></h4>\n<p><code>&#x3C;html></code>的直接子元素，<code>&#x3C;head></code>中可以设置文档的元(meta)数据，不会显示在视图中，可以在其中设置如 浏览器标题 等属性</p>\n<ul>\n<li><code>&#x3C;title></code>标签定义了不同文档的标题,在 HTML/XHTML 文档中是必须的,浏览器工具栏的标题。</li>\n<li><code>&#x3C;base></code> 标签描述了基本的链接地址/链接目标，该标签作为HTML文档中所有的链接标签的默认链接。</li>\n</ul>\n<pre><code class=\"language-html\">&#x3C;base href=\"http://www.mafengshe.com/a/\" target=\"_blank\">\n</code></pre>\n<ul>\n<li><code>&#x3C;link></code>标签定义了文档与外部资源之间的关系,通常用于链接到样式表</li>\n</ul>\n<pre><code class=\"language-html\">&#x3C;link rel=\"stylesheet\" type=\"text/css\" href=\"style.css\">\n</code></pre>\n<ul>\n<li><code>&#x3C;style></code>标签定义了HTML文档的样式文件引用地址,指定样式文件来渲染HTML文档</li>\n</ul>\n<pre><code class=\"language-html\">&#x3C;style type=\"text/css\">\r\n  body {background-color:yellow}\r\n  p {color:blue}\r\n&#x3C;/style>\n</code></pre>\n<p><code>&#x3C;meta></code>标签提供了元数据.元数据也不显示在页面上，但会被浏览器解析。META元素通常用于指定网页的描述，关键词，文件的最后修改时间，作者，和其他元数据。元数据可以使用于浏览器（如何显示内容或重新加载页面），搜索引擎（关键词），或其他Web服务。一般放置于<code>&#x3C;head></code>区域</p>\n<ul>\n<li>\n<p>定义文档的字符集</p>\n<pre><code class=\"language-html\">&#x3C;meta charset=\"utf-8\">\n</code></pre>\n</li>\n<li>\n<p>为网页定义描述内容</p>\n<pre><code class=\"language-html\">&#x3C;meta name=\"keywords\" content=\"HTML, CSS, JavaScript\">\n</code></pre>\n</li>\n<li>\n<p>定义网页作者</p>\n<pre><code class=\"language-html\">&#x3C;meta name=\"author\" content=\"mafengshe\">\n</code></pre>\n</li>\n<li>\n<p>定时刷新当前页面（30秒）</p>\n<pre><code class=\"language-html\">&#x3C;meta http-equiv=\"refresh\" content=\"30\">\n</code></pre>\n</li>\n<li>\n<p><code>&#x3C;script></code>标签用于加载脚本文件，如： JavaScript。在标签内部书写脚本或引入脚本文件位置</p>\n<pre><code class=\"language-html\">&#x3C;script type=\"text/javascript\">\r\n  document.write(\"Hello World!\")\r\n&#x3C;/script>\n</code></pre>\n<pre><code class=\"language-html\">&#x3C;script type=\"text/javascript\" src=\"scripts.js\">&#x3C;/script>\n</code></pre>\n</li>\n</ul>\n<h3>语法</h3>\n<p>1.正确嵌套</p>\n<p>2.结束标签</p>\n<p>3.属性用引号</p>\n<p>4.元素名称和属性必须小写(XHTML 要求)</p>\n<h2>3.标签与属性</h2>\n<p><a href=\"https://www.runoob.com/html/html-tag-name.html\">标签大全详见</a></p>\n<p><a href=\"https://www.runoob.com/html/html-quicklist.html\">常用标签速查</a></p>\n<p>几个常用的</p>\n<p><code>&#x3C;div></code>块标签\t\t<code>&#x3C;span></code>行内元素 \t\t<code>&#x3C;a></code>超链接\t\t<code>ol</code>有序列表</p>\n<p><code>&#x3C;img src=\"a.jpg\" width=\"100\" height=\"10\" alt=\"alt\"/></code></p>\n<p>1)<strong>src</strong>：图片地址</p>\n<p>2)<strong>alt</strong>： 图片因为网络等原因未成功加载时候的显示文案内容</p>\n<p>3)width/height：可以是像素值或者相对于父容器的百分比，两个属性可以只设置一个，另外一个值会按相应等比缩放</p>\n<h2>4.HTML5</h2>\n<h3>新增元素</h3>\n<ul>\n<li>\n<p>结构元素：selection、article、header、footer、nav、address</p>\n</li>\n<li>\n<p>块级元素：aside、figure、figcaption、dialog、datalist</p>\n</li>\n<li>\n<p>行内元素：mark、small、time、meter、progress、details、summary、menu、command</p>\n</li>\n<li>\n<p>input新类型：email、tel、url、number、range、search、color、date、month、week、time、datetime、datetime-local</p>\n</li>\n<li>\n<p>input新方法：heckValidity()：验证元素，setCustomValidity(errorMsg)：给元素设置错误消息</p>\n</li>\n</ul>\n<h3>废除的元素</h3>\n<p>basefont、big、center、font、s、strike、tt、u、frameset、frame、noframes、applet、bgsound、blink、marguee</p>\n<h3>新增的属性</h3>\n<ul>\n<li>\n<p>表单相关的属性：autocomplete、autofocus、form、list、min、max、step、multiple、novalidate、pattern、placeholder、required</p>\n</li>\n<li>\n<p>表单重写属性：formaction、formenctype、formmethod、formnovalidate、formtarget</p>\n</li>\n<li>\n<p>全局属性：contentEditable、designMode、hidden、spellcheck、tabindex</p>\n</li>\n</ul>\n<h3>文件与拖放</h3>\n<p><code>&#x3C;input type=\"file\" /></code>，multiple：允许选择多个文件，accept：过滤文件类型</p>\n<ul>\n<li>\n<p>文件API：</p>\n<p>FileList对象：通过 file.files 获取；</p>\n<p>File对象：name、size、type；</p>\n<p>FileReader：异步读取文件到内存</p>\n</li>\n<li>\n<p>拖放API：</p>\n<p>设置要拖放对象的draggable局长为true；</p>\n<p>监听拖放事件：dragstart、drag、dragenter、dragover、dragleave、drop、dragend</p>\n</li>\n<li>\n<p>DataTransfer：</p>\n<p>属性：dropEffect、effectAllowed、types</p>\n<p>方法：void clearData(DOMString format)、void setData(DOMString format, DOMString data)、DOMString getData(DOMString  format)、void setDragImage(Element image, long x, long y)</p>\n</li>\n</ul>\n<h3>多媒体播放</h3>\n<p>video：视频播放元素</p>\n<p>audio：音频播放元素</p>\n<h3>绘制图形</h3>\n<p>Canvas</p>\n<h3>本地存储</h3>\n<ul>\n<li>\n<p>localStorage：对象存储的是没有截止日期的数据。当浏览器被关闭时数据不会被删除，在下一天、周或年中，都是可用的</p>\n</li>\n<li>\n<p>sessionStorage：针对一个 session 来存储数据（当关闭浏览器标签页时数据会丢失）</p>\n</li>\n</ul>\n<p>支持的属性与方法：</p>\n<ul>\n<li>\n<p>大小被建议限制在5M（不同浏览器有不同大小）</p>\n</li>\n<li>\n<p>getItem(key)：获取指定key所存储的value值</p>\n</li>\n<li>\n<p>key(index)：返回列表中对应对应索引的key值</p>\n</li>\n<li>\n<p>length：返回key/value对列表的长度</p>\n</li>\n<li>\n<p>removeItem(key)：从storage中删除一个对应的键值对</p>\n</li>\n<li>\n<p>setItem(key,value)：将value存储到key指定的字段</p>\n</li>\n<li>\n<p>clear()：清除storage中所有key/value 对</p>\n</li>\n</ul>\n<h3>离线应用</h3>\n<p>HTML5 引入了应用程序缓存（Application Cache），这意味着可对 web 应用进行缓存，并可在没有因特网连接时进行访问</p>\n<p>优势：</p>\n<p>离线浏览 - 用户可在应用离线时使用它们；</p>\n<p>速度 - 已缓存资源加载得更快；</p>\n<p>减少服务器负载 - 浏览器将只从服务器下载更新过或更改过的资源</p>\n<h3>Web Worker 处理线程</h3>\n<p>作用：后台运行线程任务</p>\n<p>优势：后台的 JavaScript，独立于其他脚本，不会影响页面的性能</p>\n<ul>\n<li>\n<p>使用：</p>\n<p>创建对象：var w = new Worker('w.js')</p>\n<p>监听消息：w.onmessage = function(e){}</p>\n<p>发送消息：w.postMessage(message)</p>\n<p>停止监听：w.terminate()</p>\n</li>\n</ul>\n<p>注意：</p>\n<p>由于 web worker 位于外部文件中，它们无法访问下例 JavaScript 对象：</p>\n<p>​\t window 对象</p>\n<p>​\t document 对象</p>\n<p>​\t parent 对象</p>\n<h3>通信 API</h3>\n<p>跨文档通信：</p>\n<p>消息监听：window.addEventListener('message', function(e){}, false);</p>\n<p>消息发送：window.postMessage(Object data, String targetUrl);</p>\n<p>Web Socket（全双工）：</p>\n<p>var ws = new WebSocket('ws://localhost:8888/demo');</p>\n<p>ws.send('hello word');</p>\n<p>监听事件：onopen、onclose、onmessage、onerror</p>\n<p>服务端发送事件（单向）：</p>\n<p>EventSource对象：onopen、onmessage、onerror</p>\n<p>Event对象：readyState、data</p>\n<p>服务端响应头设置：Content-Type:text/event-stream; Cache-Control:no-cache;输出的消息必需以 data: 开头</p>\n<h3>地理位置API</h3>\n<p>navigator.geolocation：</p>\n<p>void getCurrentPosition(onSuccess, onError, options)：获取当前地理位置信息</p>\n<p>int watchPosition(onSuccess, onError, options)：持续监视当前地理位置信息</p>\n<p>void clearWatch(int watchId)：停止监视</p>\n<h2>5.全局属性&#x26;URL</h2>\n<h3>全局属性</h3>\n<table>\n<thead>\n<tr>\n<th align=\"left\">属性</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\"><a href=\"https://www.runoob.com/tags/att-global-accesskey.html\">accesskey</a></td>\n<td align=\"left\">设置访问元素的键盘快捷键。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.runoob.com/tags/att-global-class.html\">class</a></td>\n<td align=\"left\">规定元素的类名（classname）</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.runoob.com/tags/att-global-contenteditable.html\">contenteditable</a><strong>New</strong></td>\n<td align=\"left\">规定是否可编辑元素的内容。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.runoob.com/tags/att-global-contextmenu.html\">contextmenu</a><strong>New</strong></td>\n<td align=\"left\">指定一个元素的上下文菜单。当用户右击该元素，出现上下文菜单</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.runoob.com/tags/att-global-data.html\">data-*</a><strong>New</strong></td>\n<td align=\"left\">用于存储页面的自定义数据</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.runoob.com/tags/att-global-dir.html\">dir</a></td>\n<td align=\"left\">设置元素中内容的文本方向。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.runoob.com/tags/att-global-draggable.html\">draggable</a><strong>New</strong></td>\n<td align=\"left\">指定某个元素是否可以拖动</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.runoob.com/tags/att-global-dropzone.html\">dropzone</a><strong>New</strong></td>\n<td align=\"left\">指定是否将数据复制，移动，或链接，或删除</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.runoob.com/tags/att-global-hidden.html\">hidden</a><strong>New</strong></td>\n<td align=\"left\">hidden 属性规定对元素进行隐藏。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.runoob.com/tags/att-global-id.html\">id</a></td>\n<td align=\"left\">规定元素的唯一 id</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.runoob.com/tags/att-global-lang.html\">lang</a></td>\n<td align=\"left\">设置元素中内容的语言代码。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.runoob.com/tags/att-global-spellcheck.html\">spellcheck</a><strong>New</strong></td>\n<td align=\"left\">检测元素是否拼写错误</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.runoob.com/tags/att-global-style.html\">style</a></td>\n<td align=\"left\">规定元素的行内样式（inline style）</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.runoob.com/tags/att-global-tabindex.html\">tabindex</a></td>\n<td align=\"left\">设置元素的 Tab 键控制次序。</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.runoob.com/tags/att-global-title.html\">title</a></td>\n<td align=\"left\">规定元素的额外信息（可在工具提示中显示）</td>\n</tr>\n<tr>\n<td align=\"left\"><a href=\"https://www.runoob.com/tags/att-global-translate.html\">translate</a><strong>New</strong></td>\n<td align=\"left\">指定是否一个元素的值在页面载入时是否需要翻译</td>\n</tr>\n</tbody>\n</table>\n<h3>URL</h3>\n<h4>定义</h4>\n<p>URL - 统一资源定位器（Uniform Resource Locator）</p>\n<p>Web 浏览器使用 URL 从 Web 服务器请求页面</p>\n<p>URL 是网页的地址，比如：<a href=\"https://www.w3school.com.cn\">https://www.w3school.com.cn</a></p>\n<p>URL可以由字母组成，如\"runoob.com\"，或互联网协议（IP）地址： 192.68.20.50。大多数人进入网站使用网站域名来访问，因为 名字比数字更容易记住。</p>\n<h4>URL 编码</h4>\n<p>URL 编码将字符转换为可通过因特网传输的格式</p>\n<p>URL 只能使用 ASCII 字符集 通过因特网进行发送</p>\n<p>由于 URL 通常包含 ASCII 集之外的字符，因此必须将 URL 转换为有效的 ASCII 格式</p>\n<p>URL 编码使用后跟十六进制数字的 \"%\" 替代不安全的 ASCII 字符</p>\n<p>URL 不能包含空格。URL 编码通常使用加号（+）或 %20 替代空格</p>\n<h4>URL 编码/解码函数</h4>\n<p>encodeURI 和 decodeURI 函数操作的是完整的 URL；这俩函数假定 URL 中的任何保留字符都有特殊意义，所有不会编码它们</p>\n<p>encodeURIComponent 和 decodeURIComponent 函数操作的是URL的参数；这俩函数假定任何保留字符都代表普通文本，所以必须编码它们，所以它们（保留字符）出现在一个完整 URL 的参数里面时不会被解释成保留字符了</p>\n<p>encodeURI方法<strong>不会</strong>对下列字符编码 <strong>ASCII****字母 数字</strong> <strong>~!@#$&#x26;*()=:/,;?+‘</strong></p>\n<p>encodeURIComponent方法<strong>不会</strong>对下列字符编码 <strong>ASCII****字母 数字</strong> <strong>~!*()'</strong></p>\n<h4>URL结构</h4>\n<p><code>scheme://host.domain:port/path/filename</code></p>\n<p>说明:</p>\n<ul>\n<li>\n<ul>\n<li>scheme - 定义因特网服务的类型。最常见的类型是 http</li>\n<li>host - 定义域主机（http 的默认主机是 www）</li>\n<li>domain - 定义因特网域名，比如 runoob.com</li>\n<li>:port - 定义主机上的端口号（http 的默认端口号是 80）</li>\n<li>path - 定义服务器上的路径（如果省略，则文档必须位于网站的根目录中）。</li>\n<li>filename - 定义文档/资源的名称</li>\n</ul>\n</li>\n</ul>\n<h2>6.HTML事件</h2>\n<p><a href=\"https://www.runoob.com/tags/ref-eventattributes.html\">事件详见</a></p>\n<p>使 HTML 事件触发浏览器中的行为</p>","frontmatter":{"title":"HTML"}}},"pageContext":{"slug":"/docs/HTML&HTML5/"}},
    "staticQueryHashes": ["3649515864"]}